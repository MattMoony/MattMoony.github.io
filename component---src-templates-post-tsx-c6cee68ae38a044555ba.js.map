{"version":3,"sources":["webpack:///./src/templates/post.tsx","webpack:///./src/components/BreadCrumbs.module.scss","webpack:///./src/components/BreadCrumbs.tsx","webpack:///./src/templates/post.module.scss"],"names":["Post","data","location","post","markdownRemark","links","pathname","frontmatter","title","name","content","desc","coverImage","childImageSharp","fluid","src","hideHeader","className","style","heading","date","timeToRead","dangerouslySetInnerHTML","__html","html","module","exports","BreadCrumbs","root","Object","keys","map","l","icon","faChevronRight","to"],"mappings":"6FAAA,qGAoDeA,UA5CF,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,SACZC,EAAOF,EAAKG,eAEZC,EAAmC,CACrC,IAAK,OACL,QAAS,QAIb,OAFAA,EAAMH,EAASI,UAAYH,EAAKI,YAAYC,MAGxC,oCACI,kBAAC,IAAD,KACI,0BAAMC,KAAK,eAAeC,QAAQ,YAClC,0BAAMD,KAAK,eAAeC,QAAQ,eAClC,0BAAMD,KAAK,gBAAgBC,QAASP,EAAKI,YAAYC,QACrD,0BAAMC,KAAK,sBAAsBC,QAASP,EAAKI,YAAYI,OAEvDR,EAAKI,YAAYK,WACf,0BAAMH,KAAK,gBAAgBC,QAASP,EAAKI,YAAYK,WAAWC,gBAAgBC,MAAMC,MACtF,sCAGV,kBAAC,IAAD,CAAYC,YAAU,GAClB,kBAAC,IAAD,CAAaX,MAAOA,IACpB,yBAAKY,UAAWC,IAAMC,SAClB,6BACI,4BAAKhB,EAAKI,YAAYC,OACtB,4BAAKL,EAAKI,YAAYI,MACtB,2BAAIR,EAAKI,YAAYa,KAArB,UAAkCjB,EAAKkB,WAAvC,gBAGAlB,EAAKI,YAAYK,WACf,yBAAKG,IAAKZ,EAAKI,YAAYK,WAAWC,gBAAgBC,MAAMC,MAC5D,sCAGV,6BACA,yBAAKO,wBAAyB,CAAEC,OAAQpB,EAAKqB,SAEjD,kBAAC,IAAD,S,qBC9CZC,EAAOC,QAAU,CAAC,KAAO,oC,kCCDzB,kFAoBeC,IATK,SAAC,GAAgC,IAA9BtB,EAA8B,EAA9BA,MAEnB,OACI,yBAAKY,UAAWC,IAAMU,MACjBC,OAAOC,KAAKzB,GAAO0B,KAAI,SAAAC,GAAC,OAAI,6BAAK,2BAAG,kBAAC,IAAD,CAAiBC,KAAMC,OAAsB,kBAAC,OAAD,CAAMC,GAAIH,GAAI3B,EAAM2B,W,uBCdlHP,EAAOC,QAAU,CAAC,QAAU","file":"component---src-templates-post-tsx-c6cee68ae38a044555ba.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport style from './post.module.scss';\nimport { Helmet } from 'react-helmet';\nimport MainHeader from '../components/MainHeader';\nimport Footer from '../components/Footer';\nimport BreadCrumbs from '../components/BreadCrumbs';\n\nconst Post = ({ data, location, }) => {\n    const post = data.markdownRemark;\n\n    const links: { [url: string]: string } = {\n        '/': 'Home',\n        '/blog': 'Blog',\n    };\n    links[location.pathname] = post.frontmatter.title;\n\n    return (\n        <>\n            <Helmet>\n                <meta name=\"twitter:card\" content=\"summary\" />\n                <meta name=\"twitter:site\" content=\"@MattMoony\" />\n                <meta name=\"twitter:title\" content={post.frontmatter.title} />\n                <meta name=\"twitter:description\" content={post.frontmatter.desc} />\n                {\n                    post.frontmatter.coverImage\n                    ? <meta name=\"twitter:image\" content={post.frontmatter.coverImage.childImageSharp.fluid.src} />\n                    : <></>\n                }\n            </Helmet>\n            <MainHeader hideHeader>\n                <BreadCrumbs links={links} />\n                <div className={style.heading}>\n                    <div>\n                        <h1>{post.frontmatter.title}</h1>\n                        <h6>{post.frontmatter.desc}</h6>\n                        <p>{post.frontmatter.date} | ca. {post.timeToRead}min to read</p>\n                    </div>\n                    {\n                        post.frontmatter.coverImage\n                        ? <img src={post.frontmatter.coverImage.childImageSharp.fluid.src} />\n                        : <></>\n                    }\n                </div>\n                <hr />\n                <div dangerouslySetInnerHTML={{ __html: post.html, }}></div>\n            </MainHeader>\n            <Footer />\n        </>\n    );\n};\n\nexport default Post;\n\nexport const query = graphql`\n    query BlogQuery($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            html\n            timeToRead\n            frontmatter {\n                title\n                date(fromNow: true)\n                ref\n                desc\n                coverImage {\n                    childImageSharp {\n                        fluid {\n                            src\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BreadCrumbs-module--root--13RM3\"};","import { Link } from 'gatsby';\nimport React from 'react';\nimport path from 'path';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport style from './BreadCrumbs.module.scss';\n\ninterface BreadCrumbsProps {\n    links: { [name: string]: string, };\n};\n\nconst BreadCrumbs = ({ links }: BreadCrumbsProps) => {\n\n    return (\n        <div className={style.root}>\n            {Object.keys(links).map(l => <div><i><FontAwesomeIcon icon={faChevronRight} /></i><Link to={l}>{links[l]}</Link></div>)}\n        </div>\n    );\n};\n\nexport default BreadCrumbs;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"post-module--heading--1Zrdl\"};"],"sourceRoot":""}